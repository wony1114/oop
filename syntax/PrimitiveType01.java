package syntax;
// 기본형 데이터타입 01
// 정수형
// 정수란 나눠떨어지는 수이다. 즉 실수가 존재하지 않는 숫자들이다.
// 정수형 데이터타입에는
// 4가지 종류가 있다.
// byte  : 8비트
// short : 16비트
// int   : 32비트
// long  : 64비트

// 비트란?
// 2진법 자릿수 한자리를 뜻한다.
// 즉 8비트는 2진법 8자리 숫자를 뜻한다.

// 2진법이란?
// 우리가 일상생활에서 사용하는 숫자 체계는 10진법이다.
// 10진법은 한 자리에 10가지의 숫자가 들어갈 수 있고, 각 자리가 10의 제곱을 뜻한다.
// 예를 들어 37801 이라는 숫자는
// 30000 + 7000 + 800 + 0 + 1 로 풀어서 쓸 수 있다.
// = 3*10000 + 7*1000 + 8*100 + 0*10 + 1*1
// = 3*10^4 + 7*10^3 + 8*10^2 + 0*10^1 + 1*10^0
// 으로 쓸 수 있다.

// 2진법은 각 자리가 2가지의 숫자가 들어갈 수 있고, 각 자리가 2의 제곱을 뜻한다.
// 예를 들어 2진법 숫자 100101은
// 100000 + 0 + 0 + 100 + 0 + 1 로 풀어서 쓸 수 있다.
// = 1*2^5 + 0*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0
// = 1*32 + 0*16 + 0*8 + 1*4 + 0*2 + 1*1
// = 32 + 0 + 0 + 4 + 0 + 1
// = 37 이 된다.

// 컴퓨터의 숫자 체계
// 컴퓨터의 경우, 맨 왼쪽 자리가 0이면 +, 1이면 -가 된다.
// 하지만 맨 왼쪽 자리가 부호이기 때문에 다음과 같은 버그가 발생할 수도 있다.

// 일반적인 이진법의 경우
// 0111 1111: 127
// 1000 0000: 128

// byte의 경우, 즉 8비트 의 경우 
// 가장 왼쪽 자릿수가 0이면 +, 1이면 -가 된다.
// 0111 1111: 127
// 1000 0000: -128

// 즉 바이트는 -128부터 127까지 총 256개의 숫자를 담당한다.
// = 바이트의 범위는 -2^7부터 2^7-1까지이다.

// 숏의 범위는 -2^15부터 2^15-1까지이다.
// 인트의 범위는 -2^31부터 2^31-1까지이다.
// 롱의 범위는 -2^63부터 2^63-1까지이다.

// 해당 자료형의 최대값보다 큰 값이 들어와서 최소값으로 변환되는 것을 오버플로우라고한다.
// 해당 자료형의 최소값보다 작은 값이 들어와서 최대값으로 변환되는 것을 언더플로우라고한다.

// 단 자바이클립스에선 우리가 정수를 적으면 자동적으로 int로 인식한다.


public class PrimitiveType01 {
    public static void main(String[] args) {
        //byte myByte = 150;
        //위코드는 바이트의 범위보다 큰 숫자를 할당했기 때문에
        //에러가 난다.
        int myInt = 150;
        //위코드는 인트의 범위에 속하는 150이라는 숫자를 할당했기 때문에
        //에러가 나지 않는 코드이다.
        
    }
}














