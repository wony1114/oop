package syntax;
// 자바의 이름짓는 규칙 (Naming Convention)
// 공통규칙
// 1. 자바는 50여가지의 예약어(keyword)가 있고 해당 예약어에는
//    자바가 내부적으로 지정한 프로그래밍적 기능이 있기 때문에
//    해당 예약어로는 우리가 이름을 지어줄 수 없다.
//    그러므로 50가지 여러분들이 외우셔야 합니다. -> 옛날 옛적 이야기......
//    이클립스에선 예약어를 자주색으로 표시해준다.
//    예시: public, class, package.....
//    만약 여러분들이 어떠한 이름을 지어주는데 해당 이름이 보라색으로 출력이 되면
//    변형을 가해주거나 아니면 아예 다른 단어를 붙여주면 된다!!!
// 2. 자바에서는 대소문자를 엄격하게 구분한다.
//    즉 Member와 member는 스펠링은 같아도 대소문자가 다르기 때문에
//    다른 존재가 된다!!!!
// 3. 이름의 시작은 숫자나 특수문자가 될 수 없다.
// 4. 한글 이름이 포함된 이름은 피하자
// 5. 중복되는 이름은 금지 된다.

// 낙타등 표기법
// 낙타등 표기법이란 여러 단어로 이루어진 이름의 경우
// 두번째 단어부터는 첫 글자를 대문자로 적어서 단어의 구별이 쉽게 되는 이름 짓기 규칙이다.
// 예시: firstNumber, MemberController, selectAll() ....

// 뱀 표기법
// 뱀 표기법이란 모든 글자를 대문자로 적어주고, 
// 단어의 사이에는 _를 끼어넣는 방법이다.
// 예시: PI, UNIT_PRICE, FILE_PATH ....

// 클래스 이름 규칙
// 1. 클래스는 낙타등 표기법을 사용하고 대문자로 시작하는 명사이다.
//    예시: Ex03Naming, Scanner, ArrayList

// 변수 이름 규칙
// 1. 변수는 낙타등 표기법을 사용하고 소문자로 시작하는 명사이다.
//    예시: myNumber, number, scanner

// 메소드 이름 규칙
// 1. 메소드는 낙타등 표기법을 사용하고 소문자로 시작하는 동사이다. 또한 메소드는 무조건 이름 뒤에
//    ()가 붙는다.
//    예시: println(), selectAll(), nextInt(), main()

// 상수 이름 규칙
// 1. 상수는 뱀 표기법을 사용하고 명사이다.
//    예시: UNIT_PRICE, PI, FILE_PATH




public class Naming {

}














